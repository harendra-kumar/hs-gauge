name:           gauge
version:        0.1.3
synopsis:       small framework for performance measurement and analysis
license:        BSD3
license-file:   LICENSE
author:         Bryan O'Sullivan <bos@serpentine.com>
maintainer:     Vincent Hanquez <vincent@snarc.org>
copyright:      2009-2016 Bryan O'Sullivan and others
category:       Development, Performance, Testing, Benchmarking
homepage:       https://github.com/vincenthz/hs-gauge
bug-reports:    https://github.com/vincenthz/hs-gauge/issues
build-type:     Simple
cabal-version:  >= 1.10
extra-source-files:
  README.markdown
  changelog.md
tested-with:
  GHC==7.8.4,
  GHC==7.10.3,
  GHC==8.0.2,
  GHC==8.2.1

description:
  This library provides a powerful but simple way to measure software
  performance.  It provides both a framework for executing and
  analysing benchmarks and a set of driver functions that makes it
  easy to build and run benchmarks, and to analyse their results.

flag analysis
  description: Build with statistical analysis support
  manual: True
  default: True

library
  exposed-modules:
    Gauge
    Gauge.Main
    Gauge.Types
  other-modules:
    Gauge.IO.Printf
    Gauge.Internal
    Gauge.Monad.Internal
    Gauge.Main.Options
    Gauge.Measurement
    Gauge.Monad

  if flag(analysis)
      exposed-modules:
        Gauge.Analysis
      other-modules:
        Statistics.Distribution
        Statistics.Distribution.Normal
        Statistics.Function
        Statistics.Internal
        Statistics.Math.RootFinding
        Statistics.Matrix
        Statistics.Matrix.Algorithms
        Statistics.Matrix.Mutable
        Statistics.Matrix.Types
        Statistics.Quantile
        Statistics.Regression
        Statistics.Resampling
        Statistics.Resampling.Bootstrap
        Statistics.Sample
        Statistics.Sample.Histogram
        Statistics.Sample.Internal
        Statistics.Sample.KernelDensity
        Statistics.Transform
        Statistics.Types
        Statistics.Types.Internal

  hs-source-dirs: . statistics

  c-sources: cbits/cycles.c
  if os(darwin)
    c-sources: cbits/time-osx.c, cbits/rusage.c
  else {
    if os(windows)
      c-sources: cbits/time-windows.c
    else
      c-sources: cbits/time-posix.c, cbits/rusage.c
  }

  other-modules:
    Paths_gauge

  build-depends:
    base >= 4.5 && < 5,
    basement,
    code-page,
    containers,
    deepseq >= 1.1.0.0,
    mwc-random >= 0.8.0.3,
    vector >= 0.7.1,
    process,
    directory

    -- formely statistics dependency that we need
  if flag(analysis)
      build-depends:
        math-functions

  default-language: Haskell2010
  ghc-options: -O2 -Wall -funbox-strict-fields
  if flag(analysis)
      cpp-options: -DHAVE_ANALYSIS

test-suite sanity
  type:                 exitcode-stdio-1.0
  hs-source-dirs:       tests
  main-is:              Sanity.hs
  default-language:     Haskell2010
  ghc-options:          -O2 -Wall -rtsopts

  build-depends:
    HUnit,
    base,
    bytestring,
    gauge,
    deepseq,
    tasty,
    tasty-hunit

test-suite verbose
  type:                 exitcode-stdio-1.0
  hs-source-dirs:       tests
  main-is:              Sanity.hs
  default-language:     Haskell2010
  ghc-options:          -O2 -Wall -with-rtsopts "-T"
  cpp-options:          -DVERBOSE

  build-depends:
    HUnit,
    base,
    bytestring,
    gauge,
    deepseq,
    tasty,
    tasty-hunit

test-suite quick
  type:                 exitcode-stdio-1.0
  hs-source-dirs:       tests
  main-is:              Sanity.hs
  default-language:     Haskell2010
  ghc-options:          -O2 -Wall -with-rtsopts "-T"
  cpp-options:          -DQUICK

  build-depends:
    HUnit,
    base,
    bytestring,
    gauge,
    deepseq,
    tasty,
    tasty-hunit

test-suite quick-verbose
  type:                 exitcode-stdio-1.0
  hs-source-dirs:       tests
  main-is:              Sanity.hs
  default-language:     Haskell2010
  ghc-options:          -O2 -Wall -with-rtsopts "-T"
  cpp-options:          -DQUICK -DVERBOSE

  build-depends:
    HUnit,
    base,
    bytestring,
    gauge,
    deepseq,
    tasty,
    tasty-hunit

test-suite cleanup
  type:                 exitcode-stdio-1.0
  hs-source-dirs:       tests
  default-language:     Haskell2010
  main-is:              Cleanup.hs

  ghc-options:
    -Wall -threaded     -O0 -rtsopts

  build-depends:
    HUnit,
    base,
    bytestring,
    gauge,
    deepseq,
    directory,
    tasty,
    tasty-hunit

benchmark gcbug
  default-language: Haskell2010
  type:             exitcode-stdio-1.0
  hs-source-dirs:   benchs
  main-is:          GCBug.hs
  ghc-options: -O2 -Wall -fwarn-identities -fwarn-incomplete-record-updates
               -fwarn-incomplete-uni-patterns -fwarn-tabs
               -with-rtsopts "-T"

  build-depends:
    base                == 4.*,
    gauge,
    mtl                 >= 2     && < 2.3,
    random              >= 1.0   && < 2,
    transformers,

    conduit             >= 1.0   && < 1.3,
    conduit-combinators >= 0.2.5 && < 1.2,
    pipes               >= 4     && < 4.4,
    streaming

source-repository head
  type:     git
  location: https://github.com/vincenthz/hs-gauge
